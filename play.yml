- hosts: all
  vars:
    ansible_host_key_checking: false
  vars_files:
    - vars/default.yml
  become: true
  become_user: root

  tasks:


    # Apt clean and update
    - name: apt clean
      shell: apt clean
      become: true
      become_user: root

    - name: apt update
      shell: apt update
      become: true
      become_user: root



    # Installing packages: nginx, mariadb-server , python3-pymysql
    - name: Install LEMP Packages [mysq-server, nginx]
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'nginx', 'mariadb-server', 'python3-pymysql' ]


    - name: Sets the root password 
      mysql_user: 
        name: root 
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    # Step 1 — Creating a Database and User for WordPress
    # https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-lemp-nginx-mariadb-and-php-on-debian-10

    - name: Create a new database with name 'bobdata'
      mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: wordpress
        state: present


    - name: Create database user with password and all database privileges and 'WITH GRANT OPTION'
      mysql_user:
       name: wp_user
       password: 12345
       state: present
       login_unix_socket: /var/run/mysqld/mysqld.sock
       priv: 'wordpress.*:ALL/wordpress.*:ALL/*.*:SUPER,RELOAD,SHOW DATABASES'

    - name: Flush Privileges
      shell: mysql -e "FLUSH PRIVILEGES;"    



    # Step 2 — Installing Additional PHP Extensions
    # https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-lemp-nginx-mariadb-and-php-on-debian-10#step-2-%E2%80%94-installing-additional-php-extensions
 
    - name: Installing Additional PHP Extensions
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'php-curl', 'php-gd', 'php-intl', 'php-mbstring', 'php-soap', 'php-xml', 'php-xmlrpc', 'php-zip' ]

    - name: Installing Additional PHP Extensions
      shell: "sudo systemctl status php*"



      # Nginx Configuration
    - name: Sets / copy Nginx conf file
      template:
        src: "files/default"
        dest: "/etc/nginx/sites-available/default"















 #   - name: Removes all anonymous user accounts
 #     mysql_user:
 #       # login_unix_socket is important to avoid authentication issue
 #       login_unix_socket: /var/run/mysqld/mysqld.sock
 #       name: ''
 #       host_all: yes
 #       state: absent
 #       login_user: root
 #       login_password: "{{ mysql_root_password }}"

    
#    For testing only - Working so far
#    - name: Removes the MySQL 'performance_schema' database
#      mysql_db: 
#        login_unix_socket: /var/run/mysqld/mysqld.sock
#        name: performance_schema 
#        state: absent
#       login_user: root
#        login_password: "{{ mysql_root_password }}"

       
